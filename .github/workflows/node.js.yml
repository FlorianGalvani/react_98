# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  Linting:
      name: Linting
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Project
          uses: actions/checkout@v2
        - name: Use Node.js 16
          uses: actions/setup-node@v2
          with:
            node-version: 16
        - name: Restore NodeJS Cache
          uses: actions/cache@v2.1.4
          with:
            path: node_modules
            key: ${{ runner.os }}-16-${{ hashFiles('**/yarn.lock') }}
        - name: Install Dependencies
          run: yarn --frozen-lockfile
        - name: Run ESLint
          run: yarn lint --fix=false    
  Build:
    name: Build
    needs: Linting
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run build --if-present
    - name: Push
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: build # The branch name where you want to push the assets
        FOLDER: build # The directory where your assets are generated
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
        MESSAGE: "Build: ({sha}) {msg}" # The commit message
